<?php
namespace Geoname\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * Place
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class Place extends EntityRepository
{
    /**
     * findPlace
     *
     * @param array $criteria
     *  'countryCode'   => (e.g.) 'DE'
     *  'admin1Code'    => (e.g.) '03'
     *  'admin2Code'    => (e.g.) '00'
     *  'admin3Code'    => (same)
     *  'admin4Code'    => (same)
     *  'featureClass'  => (e.g.) 'A'
     *  'featureCode'   => (e.g.) 'ADM1'
     * @return Place|null
     */
    public function findPlace(array $criteria = array())
    {
        $dqb = $this->_em->createQueryBuilder();
        $dqb->select(array('p'))
            ->from('Geoname\Entity\Place', 'p');
        if (isset($criteria['featureCode'])) {
            $dqb->join('p.feature', 'f');
            if (isset($criteria['featureClass'])) {
                $dqb->join('f.parent', 'fp');
            }
        }
        $dqb->where($dqb->expr()->andX(
                isset($criteria['countryCode']) ?
                    $dqb->expr()->eq('p.countryCode', ':countryCode') : null,
                isset($criteria['admin1Code']) ?
                    $dqb->expr()->eq('p.admin1Code', ':admin1Code') : null,
                isset($criteria['admin2Code']) ?
                    $dqb->expr()->eq('p.admin2Code', ':admin2Code') : null,
                isset($criteria['admin3Code']) ?
                    $dqb->expr()->eq('p.admin3Code', ':admin3Code') : null,
                isset($criteria['admin4Code']) ?
                    $dqb->expr()->eq('p.admin4Code', ':admin4Code') : null,
                isset($criteria['featureCode']) ?
                    $dqb->expr()->eq('f.code', ':featureCode') : null,
                isset($criteria['featureClass']) ?
                    $dqb->expr()->eq('fp.code', ':featureClass') : null
            ))
            ->setMaxResults(1);

        foreach ($criteria as $key => $value) {
            $dqb->setParameter($key, $value);
        }

        if ($places = $dqb->getQuery()->getResult()) {
            return current($places);
        } else {
            return null;
        }
    }
}
